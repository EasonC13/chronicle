defmodule Nifs do
  @on_load :init

  def init do
    :ok = :erlang.load_nif(Application.app_dir(:broker) <> "/priv/nifs", 0)
  end

  def curl_p_init() do
    exit(:nif_library_not_loaded)
  end

  def absorb(_) do
    exit(:nif_library_not_loaded)
  end

  def squeeze(_) do
    exit(:nif_library_not_loaded)
  end

  def add_trytes(_,_,_) do
    exit(:nif_library_not_loaded)
  end
  def get_status(_,_,_) do
    exit(:nif_library_not_loaded)
  end

  def test() do
    {:ok,pecurl} = curl_p_init()
    tx = "ODGAHDLDGDNCGDIDRCRCTCTCSCTCSCGADBWAXACBWAVAYAZAQAGAHDLDGDNCUCPCXC9DTCSCGADBWAABBBQAGAQCPCSCNCQCFDPCBDRCWCGADBZACBQAGAQCPCSCNCHDFDIDBDZCGADBZACBQAGAQCPCSCNCHDFDIDBDZCNCPCBDSCNCQCFDPCBDRCWCGADBWAVAQAGAADXC9DTCGDHDCDBDTCNCHDFDIDBDZCGADBUAQAGAADXC9DTCGDHDCDBDTCNCQCFDPCBDRCWCGADBUAQAGAHDDDGDGADBUASA9BABABABCBYAYAVAUAABCBWACBZA9BABQAGATCFDFDCDFDNCFDPCHDTCGADBUASAUAVAVA9BWAUAUAVABBABUAUAABVAUACBYAXAQAGARCPCRCWCTCSCNCHDLDGADBWAUA9BCBXAABXAQAGABDTCKDNCHDLDGADBWAABVAZA9BCBABQAGARCCDBDUCXCFDADTCSCNCHDLDGADBWABBWAVAQAGARCCDBDUCXCFDADPCHDXCCDBDNCFDPCHDTCGADBUASAVAVAABCBWAAB9BXAXACBBBZAXACBBBUAYAQD99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999JPYUAV9MBDZG9ZX9BAPBBMYFEVORNBIOOZCYPZDZNRGKQYT9HFEXXXBG9TULULJIOWJWQMXSPLILOJGJG999999999999999999999999999ASIWONTO9999999999999999999VMTBAAD99999999999999999999XISWKWGOZLDAEFLBDZPDUXGFCJ9JTHVGYCTPWZRZXFKPPFEQLDHCJL9XPZKEXYJVRWCECCLFWPZWWKKXZPRSAHHWPAMAAAXOOIIYXNWBMSGHGLLFAADKLUBDVFOBIYHTUDMPGLPKFMHRMWATAJOULWRC9UJWYZ9999YQIT9RMGCXFTQSTIXGXEHLMQXLMNMHNYHLPLISIWBKNCSCATFDFCICVIUPIZGJOTRSDXUGDTN9EBZ9999ARIWONTO9999999999999999999CLICLMOOF999999999L99999999ZUD9999999FKH99999999999999"
    for <<chunk::81-bytes <- tx>> do
      add_trytes(pecurl, 1, chunk)
      absorb(pecurl)
    end
    squeeze(pecurl)
    hash = "PXWNJZONRAJECRBYHUNKVXAMNTPR9KTZZXWVMDONCWIULHAUJBMYHIEKPQTHHLGDDNMQHLGCKNPEZ9999"
    get_status(pecurl, 1,hash)
  end
end
